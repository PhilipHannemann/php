<?php
require_once("config.php");
/**
 * for managing the UderData Table
 */
class UserData
{
  private $conn;
  private $tableName = "UserData";

  public function __construct(){
     $db = new Database();
     $this->conn = $db->conn;
  }

  public function createTable(){
    $query = "CREATE TABLE $this->tableName (
      username VARCHAR(32) NOT NULL KEY,
      passwordHash VARCHAR(256),
      salt CHAR(16));";

	  $result = $this->conn->query($query);
	  if (!$result) die ($this->conn->error);

    echo "success";

  }

  public function delete($userName){
    $query = "DELETE FROM $this->tableName WHERE username = '$userName'";

    $result = $this->conn->query($query);
    if (!$result) die($this->conn->error);
  }

  public function insert($userName, $password){
    $salt = $this->generateSalt();

    $passwordHash = hash('ripemd128', $salt.$password);

    $query = "INSERT INTO $this->tableName
      (username, passwordHash, salt)
      VALUE('$userName', '$passwordHash', '$salt');";

	  $result = $this->conn->query($query);
	  if (!$result) die($this->conn->error);

    echo "User $userName has been added";
  }

  private function generateSalt($length = 8) {

    $str = "";
    $characters = array_merge(range('A','Z'), range('a','z'), range('0','9'));
    $max = count($characters) - 1;
    for ($i = 0; $i < $length; $i++) {
      $rand = mt_rand(0, $max);
      $str .= $characters[$rand];
    }
    return $str;
  }

  public function validateLogin($userName, $hash){
    $query = "SELECT * FROM $this->tableName WHERE username LIKE '$userName';";

    $result = $this->conn->query($query);
    if (!$result) die($this->conn->error);

    $rows = $result->num_rows;

    if ($rows === 0) {
      echo "You are not a valid user";
      return false;
    }

    $result->data_seek(0);
    $values = $result->fetch_assoc();

    $salt = $values['salt'];
    $passwordHash = $values['passwordHash'];

    $token = hash('ripemd128', $salt.$hash);

    $result->close();

    if($token == $passwordHash){
        return true;
    }else{
      echo "You are not a valid user!";
      return false;
    }

  }


}


?>
